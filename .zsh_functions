###############################################################################
#               _            __                      _    _
#     ____ ___ | |__        / _| _   _  _ __    ___ | |_ (_)  ___   _ __   ___
#    |_  // __|| '_ \      | |_ | | | || '_ \  / __|| __|| | / _ \ | '_ \ / __|
#  _  / / \__ \| | | |     |  _|| |_| || | | || (__ | |_ | || (_) || | | |\__ \
# (_)/___||___/|_| |_|_____|_|   \__,_||_| |_| \___| \__||_| \___/ |_| |_||___/
#                    |_____|
#
###############################################################################

# tar and bzip a directory
function shrinkwrap() {
    local dir
    readonly dir=$1
    if [ -d $dir ]; then
        tar -cf ${dir}.tar $dir && bzip2 -9 ${dir}.tar && mv ${dir}.tar.bz2 ${dir}.tbz
    else
        printf "shrinkwrap: error: yo, I can't shrinkwrap ${dir}\n"
    fi
}

function alarm() {
    local duration repeat sound_file
    readonly duration="${1:=10}"
    readonly repeat="${2:=2}"
    readonly sound_file="${3:="/usr/share/sounds/speech-dispatcher/canary-long.wav"}"

    # Make sure we have aplay.
    if [[ -z "$(command -v aplay)" ]]; then
        printf "aplay is required to play .wav files\n"
        return 1
    fi

    # Make sure the $sound_file exists.
    if [[ ! -e $sound_file ]]; then
        printf "${sound_file}: No such file or directory\n"
        return 1
    fi

    sleep $duration

    # ALARM!
    for r in {1..$repeat}
    do
        aplay $sound_file 2&>/dev/null
    done
}
